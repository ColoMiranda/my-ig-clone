{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marcos.miranda\\\\Documents\\\\ReactJS\\\\mi-ig-clone\\\\my-ig-clone\\\\src\\\\ImageUpload.js\";\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport { db, storage } from \"./Firebase\";\nimport './ImageUpload.css';\n\nfunction ImageUpload({\n  username\n}) {\n  const [caption, setCaption] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [image, setImage] = useState(null);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\", snapshot => {\n      // Upload progress...\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      // Error function...\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // Complete function...\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        db.collection(\"posts\").add({\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          userName: username\n        });\n        setProgress(0);\n        setCaption(\"\");\n        setImage(null);\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imageupload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"progress\", {\n    value: progress,\n    max: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Enter a caption...\",\n    onChange: event => setCaption(event.target.value),\n    value: caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Upload\"));\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["C:/Users/marcos.miranda/Documents/ReactJS/mi-ig-clone/my-ig-clone/src/ImageUpload.js"],"names":["React","useState","Button","Input","firebase","db","storage","ImageUpload","username","caption","setCaption","progress","setProgress","image","setImage","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","userName","event","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,YAA5B;AACA,OAAO,mBAAP;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAiC;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMc,YAAY,GAAGC,CAAC,IAAI;AACxB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACrBJ,MAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAGd,OAAO,CAACe,GAAR,CAAa,UAASR,KAAK,CAACS,IAAK,EAAjC,EAAoCC,GAApC,CAAwCV,KAAxC,CAAnB;AAEAO,IAAAA,UAAU,CAACI,EAAX,CACE,eADF,EAEGC,QAAD,IAAc;AACZ;AACA,YAAMd,QAAQ,GAAGe,IAAI,CAACC,KAAL,CACdF,QAAQ,CAACG,gBAAT,GAA4BH,QAAQ,CAACI,UAAtC,GAAoD,GADrC,CAAjB;AAIAjB,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KATH,EAWGmB,KAAD,IAAW;AACT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,MAAAA,KAAK,CAACH,KAAK,CAACI,OAAP,CAAL;AACD,KAfH,EAiBE,MAAM;AACJ;AACA5B,MAAAA,OAAO,CACJe,GADH,CACO,QADP,EAEGc,KAFH,CAEStB,KAAK,CAACS,IAFf,EAGGc,cAHH,GAIGC,IAJH,CAIQC,GAAG,IAAI;AACXjC,QAAAA,EAAE,CAACkC,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACzBC,UAAAA,SAAS,EAAErC,QAAQ,CAACsC,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EADc;AAEzBnC,UAAAA,OAAO,EAAEA,OAFgB;AAGzBoC,UAAAA,QAAQ,EAAEP,GAHe;AAIzBQ,UAAAA,QAAQ,EAAEtC;AAJe,SAA3B;AAOAI,QAAAA,WAAW,CAAC,CAAD,CAAX;AACAF,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAI,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAfH;AAmBD,KAtCH;AAwCD,GA3CD;;AA6CA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAU,IAAA,KAAK,EAAEH,QAAjB;AAA2B,IAAA,GAAG,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAGE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,oBAFd;AAGE,IAAA,QAAQ,EAAEoC,KAAK,IAAIrC,UAAU,CAACqC,KAAK,CAAC9B,MAAN,CAAa+B,KAAd,CAH/B;AAIE,IAAA,KAAK,EAAEvC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAUE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEM,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAYE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CADF;AAgBD;;AAED,eAAeZ,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Input } from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport { db, storage } from \"./Firebase\";\r\nimport './ImageUpload.css';\r\n\r\nfunction ImageUpload({username}) {\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [image, setImage] = useState(null);\r\n\r\n  const handleChange = e => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        // Upload progress...\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        \r\n        setProgress(progress);\r\n      },\r\n\r\n      (error) => {\r\n        // Error function...\r\n        console.log(error);\r\n        alert(error.message);\r\n      },\r\n\r\n      () => {\r\n        // Complete function...\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            db.collection(\"posts\").add({\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              caption: caption,\r\n              imageUrl: url,\r\n              userName: username\r\n            });\r\n\r\n            setProgress(0);\r\n            setCaption(\"\");\r\n            setImage(null);\r\n          }\r\n\r\n          )\r\n\r\n      }\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div className=\"imageupload\">\r\n       <progress value={progress} max=\"100\" />\r\n\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Enter a caption...\"\r\n        onChange={event => setCaption(event.target.value)}\r\n        value={caption}\r\n      />\r\n\r\n      <Input type=\"file\" onChange={handleChange} />\r\n\r\n      <Button onClick={handleUpload}>Upload</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}